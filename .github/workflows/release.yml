name: Release

on:
  push:
    tags:
      - 'v*'

# Restrict to approved users
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      is-collaborator: ${{ steps.check.outputs.is-collaborator }}
    steps:
      - name: Check if user is organization collaborator
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data: members } = await github.rest.orgs.listMembers({
                org: 'NexusDI'
              });
              
              const isMember = members.some(member => member.login === context.actor);
              console.log(`User ${context.actor} is ${isMember ? 'a' : 'not a'} member of NexusDI organization`);
              
              core.setOutput('is-collaborator', isMember.toString());
            } catch (error) {
              console.log('Error checking organization membership:', error.message);
              core.setOutput('is-collaborator', 'false');
            }

  release:
    runs-on: ubuntu-latest
    needs: check-permissions
    # Only allow organization collaborators to run releases
    if: needs.check-permissions.outputs.is-collaborator == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'current'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -z "$PREVIOUS_TAG" ]; then
          # First release - get all commits
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
        else
          # Get commits since previous tag
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse ${PREVIOUS_TAG}..HEAD)
        fi
        
        # Escape newlines for GitHub Actions
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
        
        echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          npm install nexusdi
          ```
          
          ## Documentation
          
          Visit our [documentation](https://nexusdi.github.io/nexusdi) for detailed guides and examples.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/
        asset_name: nexusdi-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip 